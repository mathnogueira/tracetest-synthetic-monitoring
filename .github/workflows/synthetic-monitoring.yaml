# This examples illustrates how you can use tracetest to achieve synthetic monitoring
# and get notified via Slack when something fails

name: Synthetic monitoring with Tracetest

on:
  # for testing purposes
  push:
    branches:
      - main
  schedule:
  # Normally, we run synthetic monitoring in a time schedule. GitHub Actions allows
  # us to achieve that using a cron job. Read more of how cron jobs are configured in
  # this article: https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm
  #
  # Here are some examples of valid cron strings:
  #
  #- cron: '*/30 * * * *' # every 30 minutes
  #- cron: '*/5 * * * *' # every 5 minutes
  #- cron: '* * * * *' # every minute
  #- cron: '0 */1 * * *' # every hour
  #
  # For this example, we are going to run the job every 5 minutes
  - cron: '*/5 * * * *'

jobs:
  run-syntehtic-monitoring:
    name: Run syntehtic monitoring
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Start app and tracetest
        run: docker-compose -f docker-compose.yaml -f tracetest/docker-compose.yaml up -d

      - name: Install tracetest CLI
        run: curl -L https://raw.githubusercontent.com/kubeshop/tracetest/main/install-cli.sh | bash

      - name: Run syntethic monitoring tests
        id: monintoring
        # We run the test and store the command stdout in a GitHub actions output called "TRACETEST_OUTPUT". Read more
        # about this in GitHub's official documentation: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-output-parameter
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "TRACETEST_OUTPUT=$(tracetest --config ./tracetest/tracetest-cli.yaml test run -d test-api.yaml)<<$EOF" >> "$GITHUB_OUTPUT"
          echo "$EOF" >> "$GITHUB_OUTPUT"

      - name: Print output
        run: echo $TRACETEST_OUTPUT
        env:
          TRACETEST_OUTPUT: ${{ steps.monitoring.output.TRACETEST_OUTPUT }}
